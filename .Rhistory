g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z, , colour = "red"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z, , colour = "CC0000"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
set.seed(100)
lambda <- 0.2
nsimulations <- 1000
n <- 40
mns <- NULL
for (i in 1 : nsimulations) mns <- c(mns, mean(rexp(n, lambda)))
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
set.seed(108)
lambda <- 0.2
nsimulations <- 1000
n <- 40
mns <- NULL
for (i in 1 : nsimulations) mns <- c(mns, mean(rexp(n, lambda)))
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
set.seed(1212)
lambda <- 0.2
nsimulations <- 1000
n <- 40
mns <- NULL
for (i in 1 : nsimulations) mns <- c(mns, mean(rexp(n, lambda)))
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
set.seed(138)
lambda <- 0.2
nsimulations <- 1000
n <- 40
mns <- NULL
for (i in 1 : nsimulations) mns <- c(mns, mean(rexp(n, lambda)))
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
set.seed(8)
lambda <- 0.2
nsimulations <- 1000
n <- 40
mns <- NULL
for (i in 1 : nsimulations) mns <- c(mns, mean(rexp(n, lambda)))
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000"))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000", show_guide=FALSE))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000", show_guide=FALSE))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000", show_guide=FALSE))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000", show_guide=FALSE))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000", show_guide=FALSE))
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g <- g + theme(legend.position='none')
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000", show_guide=FALSE))
g <- g + labs(x = "Number of simulations", y = "Cumulative mean")
g <- g + theme(legend.position='none')
g
head(mns)
head(means)
means(1000)
means[1000]
means[1000]
tvariance<-((1/lambda)^2)/n
tvariance
head(mns)
svariance<-var(means)
svariance
dim(means)
set.seed(8)
lambda <- 0.2
nsimulations <- 1000
n <- 40
mns <- NULL
for (i in 1 : nsimulations) mns <- c(mns, mean(rexp(n, lambda)))
var(mns)
svariance<-var(mns)
svariance
head(mns)
var(mns[1:10])
var(mns[1])
var(mns[1:2])
var(mns[1:3])
var(mns[1:4])
var(mns[1:5])
var(mns[1:10])
cumvar
cumvar<- cumsum( (mns-cumsum(mns)/(1:nsimluations))^2)
cumvar<- cumsum( (mns-cumsum(mns)/(1:nsimulations))^2)
head(cumvar)
var(mns[1])
var(mns[1:2])
var(mns[1:3])
head(mns)
head(means)
q<-cumsum(mns^2)/1:nsimulations
head(q)
head(q)-head(means)^2
vars <- cumsum(mns^2)/(1:nsimulations)-means^2
head(vars)
vars <- cumsum(mns^2)/(1:nsimulations)-means^2
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = vars, z =rep(tvariance, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000", show_guide=FALSE))
g <- g + labs(x = "Number of simulations", y = "Cumulative variance")
g <- g + theme(legend.position='none')
g
head(means)
head(mns)
histogram(mns)
hist(mns)
hist(means)
hist(mns)
hist(mns,  density=20, breaks=20)
hist(mns,   breaks=20)
hist(mns,   breaks=50)
hist(mns,   breaks=25)
g <- ggplot(data.frame(x = 1:nsimulations, y = mns), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000", show_guide=FALSE))
g <- g + labs(x = "Number of simulations", y = "Cumulative variance")
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = 1:nsimulations, y = mns), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + labs(x = "Number of simulations", y = "Cumulative variance")
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = 1:nsimulations, y = mns), aes(x = x, y = y))
g <- g  + geom_histogram(size = 0.5, colour="000099")
g <- g + labs(x = "Number of simulations", y = "Cumulative variance")
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = 1:nsimulations, y = mns), aes(x = x, y = y))
g <- g  + geom_histogram()
g <- g + labs(x = "Number of simulations", y = "Cumulative variance")
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = 1:nsimulations, y = mns), aes(x = x, y = y))
g <- g  + geom_histogram()
g <- g + labs(x = "Number of simulations", y = "Cumulative variance")
g <- g + theme(legend.position='none')
g
w<- (data.frame(x = 1:nsimulations, y = mns)
)
head(w)
g <- ggplot(data.frame(x = 1:nsimulations, y = mns), aes(y = y))
g <- g  + geom_histogram()
g <- g + labs(x = "Number of simulations", y = "Cumulative variance")
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = 1:nsimulations, y = mns), aes(x=x, y = y))
g <- g  + geom_histogram()
g <- g + labs(x = "Number of simulations", y = "Cumulative variance")
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = mns), aes(x=x))
g <- g  + geom_histogram()
g <- g + labs(x = "Number of simulations", y = "Cumulative variance")
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = mns), aes(x=x))
g <- g  + geom_histogram()
g <- g + labs(title = "Distribution of Means of Exponential Distribution", x= "Sample Mean" y = "Density")
g <- g + stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(tvariance)),color = "blue", size = 1.0)
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = mns), aes(x=x))
g <- g  + geom_histogram()
g <- g + labs(title = "Distribution of Means of Exponential Distribution", x= "Sample Mean" y = "Density")
g <- g + stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(tvariance)),color = "blue", size = 1.0)
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = mns), aes(x=x))
g <- g  + geom_histogram()
g <- g + labs(title = "Distribution of Means of Exponential Distribution", x= "Sample Mean" y = "Density")
g <- g + stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(tvariance)),color = "blue", size = 1.0)
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = mns), aes(x=x))
g <- g  + geom_histogram()
g <- g + labs(title = "Distribution of Means of Exponential Distribution", x= "Sample Mean" y = "Density")
g <- g + stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(tvariance)),color = "blue", size = 1.0)
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = mns), aes(x=x))
g <- g  + geom_histogram()
g <- g + labs(title = "Distribution of Means of Exponential Distribution", x= "Sample Mean" y = "Density")
g <- g + stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(tvariance)),color = "blue", size = 1.0)
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = mns), aes(x=x))
g <- g  + geom_histogram(aes(y=..density..))
g <- g + labs(title = "Distribution of Means of Exponential Distribution", x= "Sample Mean" y = "Density")
g <- g + stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(tvariance)),color = "blue", size = 1.0)
g <- g + theme(legend.position='none')
g
g <- g + labs(title = "Distribution of Means of Exponential Distribution", x= "Sample Mean" y = "Density")
g <- ggplot(data.frame(x = mns), aes(x=x))
g <- g  + geom_histogram(aes(y=..density..))
g <- g + labs(title = "Distribution of Means of Exponential Distribution", x= "Sample Mean", y = "Density")
g <- g + stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(tvariance)),color = "blue", size = 1.0)
g <- g + theme(legend.position='none')
g
g <- ggplot(data.frame(x = mns), aes(x=x))
g <- g  + geom_histogram(aes(y=..density..))
g <- g + labs(title = "Distribution of Means of Exponential Distribution", x= "Sample Mean", y = "Density")
g <- g + stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(tvariance)),color = "blue", size = 1.0)
g <- g + theme(legend.position='none')
g
means <- cumsum(mns)/(1:nsimulations)
library(ggplot2)
g <- ggplot(data.frame(x = 1:nsimulations, y = means, z =rep(1/lambda, nsimulations)), aes(x = x, y = y))
g <- g  + geom_line(size = 0.5, colour="000099")
g <- g + geom_line(aes(y = z,  colour = "CC0000", show_guide=FALSE))
g <- g + labs(x = "Number of simulations", y = "Cumulative mean")
g <- g + theme(legend.position='none')
g
devtools::install_github("rstudio/rmarkdown")
library(datasets)
data(ToothGrowth)
head(ToothGrowth)
library(datasets)
data(ToothGrowth)
head(ToothGrowth)
str(ToothGrowth)
dim(ToothGrowth)
library(ggplot2)
mean(ToothGrowth$len)
sd(ToothGrowth$len)
plot <- ggplot(ToothGrowth,  aes(x=factor(dose),y=len,fill=factor(dose)))
p<- p + geom_boxplot(notch=F) + facet_grid(.~supp)
p <- ggplot(ToothGrowth,  aes(x=factor(dose),y=len,fill=factor(dose)))
p<- p + geom_boxplot(notch=F) + facet_grid(.~supp)
p
p <- ggplot(ToothGrowth,  aes(x=factor(dose),y=len,fill=factor(dose)))
p <- p + geom_boxplot(notch=F) + facet_grid(.~supp)
p <- p + labs(x= "Dosage (Milligram)", y = " Length of teeth"  )
p
mean(ToothGrowth$len)
sd(ToothGrowth$len)
library(ggplot2)
bp <- ggplot(ToothGrowth,  aes(x=factor(dose),y=len,fill=factor(dose)))
bp <- bp + geom_boxplot(notch=F) + facet_grid(.~supp)
bp <- bp + labs(x= "Dosage (Milligram)", y = " Length of teeth"  )
bp
bp <- ggplot(ToothGrowth,  aes(x=factor(dose),y=len,fill=factor(dose)))
bp <- bp + geom_boxplot(notch=F)
bp <- bp + labs(x= "Dosage (Milligram)", y = " Length of teeth"  )
bp
bp <- ggplot(ToothGrowth,  aes(x=factor(dose),y=len,fill=factor(dose)))
bp <- bp + geom_boxplot(notch=F) + facet_grid(.~supp)
bp <- bp + labs(x= "Dosage (Milligram)", y = " Length of teeth"  )
bp
bp <- ggplot(ToothGrowth,  aes(x=factor(dose),y=len,fill=factor(dose)))
bp <- bp + geom_boxplot(notch=T) + facet_grid(.~supp)
bp <- bp + labs(x= "Dosage (Milligram)", y = " Length of teeth"  )
bp
bp <- ggplot(ToothGrowth,  aes(x=factor(dose),y=len,fill=factor(dose)))
bp <- bp + geom_boxplot() + facet_grid(.~supp)
bp <- bp + labs(x= "Dosage (Milligram)", y = " Length of teeth"  )
bp
head(ToothGrowth)
tail(ToothGrowth)
t.test(len ~ supp, data = ToothGrowth)
t.test(len ~ supp, data = ToothGrowth)
supp.t1 <- t.test(len~supp, paired=F, var.equal=T, data=ToothGrowth)
supp.t1
supp.t2 <- t.test(len~supp, paired=F, var.equal=F, data=ToothGrowth)
supp.t2
head(ToothGrowth)
t2<- t.test(len ~ dose, data = ToothGrowth)
w<- subset(ToothGrowth, dose %in% c(0.5, 2.0))
summary(w)
dostest<- subset(ToothGrowth, dose %in% c(0.5, 2.0))
t2<- t.test(len ~ supp, data = dostest)
t2
t1
t1<- t.test(len ~ supp, data = ToothGrowth)
t1
t2
dostest<- subset(ToothGrowth, dose %in% c(0.5, 2.0))
t1<- t.test(len ~ supp, data = dostest)
t1
supptest1 <- subset(ToothGrowth, dose %in% c(0.5))
supptest1 <- subset(ToothGrowth, dose %in% c(0.5))
supptest2 <- subset(ToothGrowth, dose %in% c(1))
supptest3 <- subset(ToothGrowth, dose %in% c(2))
st2<- t.test(len ~ supp, data = supptest1)
st2
dostest<- subset(ToothGrowth, dose %in% c(0.5, 2.0))
dt1<- t.test(len ~ dose, data = dostest)
dt1
supptest1 <- subset(ToothGrowth, dose %in% c(0.5))
supptest2 <- subset(ToothGrowth, dose %in% c(1))
supptest3 <- subset(ToothGrowth, dose %in% c(2))
st2<- t.test(len ~ supp, data = supptest1)
st2
st2<- t.test(len ~ supp, data = supptest2)
st2
st3<- t.test(len ~ supp, data = supptest3)
st3
st2
st1
supptest1 <- subset(ToothGrowth, dose %in% c(0.5))
supptest2 <- subset(ToothGrowth, dose %in% c(1))
supptest3 <- subset(ToothGrowth, dose %in% c(2))
st1<- t.test(len ~ supp, data = supptest1)
st1
st2<- t.test(len ~ supp, data = supptest2)
st2
st3<- t.test(len ~ supp, data = supptest3)
st3
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
install.packages("manipulate")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
myplot
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rcharts")
install.packages("rCharts")
install.packages("devtools")
```{r}
fit <- lm(y ~ x1 + x2 + x3)
summary(fit)
```
```
---
```{r, echo=TRUE, results='hide'}
# only shows the scripts
sum(1:10)
10 * 11 / 2
```
```{r, echo=TRUE, results='hide'}
# only shows the scripts
sum(1:10)
10 * 11 / 2
```
getwd()
setwd("D:/r/shiny")
```{r}
data1<- read.csv("mammographic.dat", header = FALSE, sep= "," , skip = 10)
```
data1<- read.csv("mammographic.dat", header = FALSE, sep= "," , skip = 10)
head(data1)
colnames(data1)<- c("BI-RADS", "Age", "Shape", "Margin", "Density", "Severity")
head(data1)
summary(data1)
mean(data1)
class(data1)
class(data1$Age)
mean(data1$Age)
mean(as.numeric(data1$Age))
mean(as.numeric(data1))
library(dplyr)
colMeans(data1)
colMeans(as.numeric(data1)
)
data1$`BI-RADS`<-as.numeric(data1$`BI-RADS`)
mean(data1$`BI-RADS`)
data1$`BI-RADS`<-as.numeric(data1$`BI-RADS`)
data1$Age<-as.numeric(data1$Age)
data1$Shape<- as.numeric(data1$Shape)
data1$Margin<- as.numeric(data1$Margin)
data1$Density <-  as.numeric(data1$Density)
colmeans(data1)
colMeans(data1)
avgs<-colMeans(data1)
summary(data1$`BI-RADS`)
summary(data1$Age)
library(zoo)
?na.aggregate
data2<- na.aggregate(data1, FUN= median)
summary(data2)
summary(Data1)
summary(data1)
head(data1)
data1<- read.csv("mammographic.dat", header = FALSE, sep= "," , skip = 10)
colnames(data1)<- c("BI-RADS", "Age", "Shape", "Margin", "Density", "Severity")
head(data1)
data1[data1 == "?"]= NA
head(data1)
data1<- read.csv("mammographic.dat", header = FALSE, sep= "," , skip = 10, na.strings = "?")
head(data1)
colnames(data1)<- c("BI-RADS", "Age", "Shape", "Margin", "Density", "Severity")
data1$`BI-RADS`<-as.numeric(data1$`BI-RADS`)
data1$Age<-as.numeric(data1$Age)
data1$Shape<- as.numeric(data1$Shape)
data1$Margin<- as.numeric(data1$Margin)
data1$Density <-  as.numeric(data1$Density)
head(data1)
data2<- na.aggregate(data1, FUN= median)
head(data2)
summary(data1)
summary(data2)
data1<- read.csv("mammographic.dat", header = FALSE, sep= "," , skip = 10, na.strings = "?")
colnames(data1)<- c("BI-RADS", "Age", "Shape", "Margin", "Density", "Severity")
data1$`BI-RADS`<-as.numeric(data1$`BI-RADS`)
data1$Age<-as.numeric(data1$Age)
data1$Shape<- as.numeric(data1$Shape)
data1$Margin<- as.numeric(data1$Margin)
data1$Density <-  as.numeric(data1$Density)
data1<- na.aggregate(data1, FUN= median)
Severity
model <- glm(Severity~BIA-RADS+Age+Shape+Margin+Density, data = data1, family = "binomial")
model <- glm(Severity~BI-RADS+Age+Shape+Margin+Density, data = data1, family = "binomial")
colnames(data1)<- c("BIRADS", "Age", "Shape", "Margin", "Density", "Severity")
model <- glm(Severity~BIRADS+Age+Shape+Margin+Density, data = data1, family = "binomial")
model
summary(model)
summary(model)
install.packages("shiny")
install.packages("shiny")
library(shiny)
install.packages("shiny")
library("shiny")
library(shiny)
